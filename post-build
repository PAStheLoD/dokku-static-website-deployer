#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

destroy_temp_dir() {
  local APP="$1"
  local TMPDIR
  TMPDIR=$(mktemp -d)
  trap 'rm -rf "$TMP_WORK_DIR" > /dev/null' RETURN


  local IMAGE
  IMAGE=$(get_app_image_name $APP)

  dokku_col_log_info1_quiet "Running container $IMAGE with default CMD to build stuff!"

  local ENV_VARS=""
  [[ -r $DOKKU_ROOT/$APP/ENV ]] && {
      grep -Eo "export ([a-zA-Z_][a-zA-Z0-9_]*=.*)" $DOKKU_ROOT/$APP/ENV | cut -d" " -f2- > $DOKKU_ROOT/$APP/ENV_VARS.file_no_export
      ENV_VARS=--env-file "$DOKKU_ROOT/$APP/ENV_VARS.file_no_export"
      chown dokku:docker "$DOKKU_ROOT/$APP/ENV_VARS.file_no_export"
      chmod g+r "$DOKKU_ROOT/$APP/ENV_VARS.file_no_export"
  }
  echo $(docker run --rm -e DOKKU_APP="$APP" $ENV_VARS -v $TMPDIR:/dist $IMAGE 2>&1)
  
  rm -rf "$DOKKU_ROOT/$APP/ENV_VARS.file_no_export"
  rm -rf "$DOKKU_ROOT/$APP/static-website-data"
  cp -r -L "$TMPDIR/." "$DOKKU_ROOT/$APP/static-website-data"
  chmod o+rx "$DOKKU_ROOT/$APP/static-website-data"
  
  [[ $(ls -1 "$DOKKU_ROOT/$APP/static-website-data" | wc -l) = 0 ]] && { dokku_log_fail "ERROR!! No files copied. Check your Dockerfile, it should copy things into /dist." ; }
  
  dokku_log_verbose_quiet "Copied /dist"
}

destroy_temp_dir "$1"

plugn trigger post-domains-update "$APP"
